% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/extract.R
\docType{methods}
\name{[,Searchable,PatternOrCharacter,missing-method}
\alias{$,Searchable-method}
\alias{$<-,Searchable-method}
\alias{[,Searchable,PatternOrCharacter,missing-method}
\alias{[<-,Searchable,character,missing-method}
\alias{[[,Searchable,character-method}
\alias{[[<-,Searchable,character,missing-method}
\alias{extract}
\title{Extraction operators for Searchable object}
\usage{
\S4method{[}{Searchable,PatternOrCharacter,missing}(x, i, j, ..., drop = TRUE)

\S4method{[[}{Searchable,character}(x, i)

\S4method{$}{Searchable}(x, name)

\S4method{[}{Searchable,character,missing}(x, i) <- value

\S4method{[[}{Searchable,character,missing}(x, i) <- value

\S4method{$}{Searchable}(x, name) <- value
}
\arguments{
\item{x}{Searchable object}

\item{i}{character; pattern with potential match modifiers applied,}

\item{j}{missing; never specified}

\item{...}{additional arguments. See \code{\link[base]{Extract}}}

\item{drop}{For matrices and arrays. If TRUE the result is coerced to the
lowest possible dimension (see the examples). This only works for
extracting elements, not for the replacement. See \code{\link[base]{drop}}
for further details.}

\item{name}{character; a name to be extracted, used with \code{$}, so no
match modification can be applied to the name.}

\item{value}{replacement value for replacement functions

The methods for searching respect the modifiers applied to both \code{x} and
\code{i}.}
}
\value{
The values after the extracting methods have been applied:\cr
  \code{\[} returns a subset of \code{x}, but which is not Searchable.  \cr
  \code{\[\[} and \code{\$} return a sinlge element of \code{x}  \cr
}
\description{
Defines  \code{[}, \code{[[}, and \code{$} for Searchable objects
}
\section{\code{[}, \code{[<-} }{


\code{[} and \code{[<-} are used for getting and setting
\strong{zero or more} elemenxts of \code{x}. This is probably the most
useful of the search modifiers. This search returns elements of
the target that matches \strong{ANY} of the search patterns. Unlike the
its normal behavior, \code{\[} does not guarantee the output to have as many
elements as elements to \code{pattern}.

\code{[} does not return a Searchable object. It is thought that
the return valuable will not be subsequently searched. It is easy to turn
the results into a Searchable object using \code{searchable} however.
}

\section{\code{[[}, \code{[[<-} and \code{$}, \code{$<-} }{


These operators are used for getting and setting at \strong{zero or one}
element of \code{x}. Matches to more than one element result in an error.
}

\section{repeated-names}{


Unlike for environments and hashes, no constraints exist for ensuring
uniqueness for names in vectors and lists. These structures may contain
multiple elements with the same name. Normal attempts to extract by name
yield only the first element that matches the name. Using a \code{Searchable}
pattern match yields all matching elements.
}
\examples{
# ATOMIC VECTORS:
    v <- c( a=1, b=2, B=3, c=4, c2=5 )
    sv <- searchable(v)

  # EXTRACT:
    sv[ c('a','b') ]        # Normal
    sv[ regex('c.?') ]
    sv[ fixed('c') ]
    sv[ 'x' ]                # NA

    sv[["a"]]
    sv[[ ignore.case("a") ]]
    sv[[ ignore.case("A") ]]

    sv$a
    sv$b
    sv$B


  # WITH MARGRITTR:
  \dontrun{
    "b" \%>\% sv[[.]]
    "B" \%>\% ignore.case \%>\% sv[.]
    "c." \%>\% perl \%>\% sv[[.]]
    "c.?" \%>\% perl \%>\% sv[.]
   }

  # REPLACEMENT:
    sv[['a']] <- "first"
    sv[[ perl('c.') ]] <- "third"
    # sv[[ perl('c.?') ]] <- "third"


  # RECURSIVE LISTS:
    l <- list( a=1, b=2, c=3 )
    sl <- searchable(l)
    sl[["b"]]
    sl[[ ignore.case("B") ]]
   \dontrun{
    sl[[ "B"  \%>\% ignore.case ]]
    "b" \%>\% sl[[.]]
    "B" \%>\% ignore.case \%>\% sl[[ . ]]
   }
}
\seealso{
\code{\link{Searchable}}           \cr
   \code{\link[base]{Extract}}        \cr
   \code{\link[stringr]{ignore.case}} \cr
   \code{\link[stringr]{perl}}        \cr
   \code{\link{reverse.lookup}}       \cr
}

