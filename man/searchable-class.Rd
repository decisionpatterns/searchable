% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/searchable.R
\docType{class}
\name{searchable-class}
\alias{searchable}
\alias{searchable-class}
\title{searchable}
\arguments{
\item{x}{object to be marked as searchable}

\item{modifiers}{functions used to modify the search}
}
\value{
By default, the extraction from a searchable objects is not a class
  searchable. It is assumed that in most cases, the developer will not want
  another searchable object.
}
\description{
Creates a searchable class that allows for modification for searches.
}
\section{Slots}{

\describe{
\item{\code{modifiers}}{zero or more function that are used to modify the search
function before performing the search.


The searchable class allows for non-standard, stringr-like searches when
extracting (or replacing) on object based on the objects names. The following
modification are (at present) supported: \code{fixed},
\code{ignore.case}, \code{perl} and
\code{reverse.lookup}.

Search modification can be applied either to the object being searched or
the search pattern(s). To apply them to the searched object add the modifiers
to the \code{modifiers} slot of the object. These are applied after any user
supplied modifiers.

\code{searchable} is designed to be minimally invase. No modification to the
object or its names are made when classing an object as searcable and if no
search modifiers are enabled, the object behaves as a regular,
"non-searchable" object.

When the target object search modifiers Search modifiers can be applied to either target object (e.g. \code{x} )
or to the name being sought.
name being searched for
the object \code{x} can have a search modification
wraps \code{x} in class \code{searchable} which have overloaded
operators that allow better searching of names.}
}}
\note{
- Environments cannot be (easily) be made "searchable" due to the way the
  objects are implemented
  - The extraction methods for searchable objects are (at present) limited to
    only one pattern. This
}
\examples{
# ATOMIC VECTORS:
  v <- c( a=1, b=2, c=3, c2=4 )
  sv <- searchable(v)

  # EXTRACT:
    sv[["b"]]
    sv[[ ignore.case("B") ]]
    sv[[ "B"  \%>\% ignore.case ]]

    sv[ c('a','b') ]
    sv[ perl('c.?') ]
    sv[ c('a','c.')  \%>\% perl ]
    sv[ 'x' ]


  # WITH MARGRITTR:
    "b" \%>\% sv[[.]]
    "B" \%>\% ignore.case \%>\% sv[[ . ]]
    "c." \%>\% perl \%>\% sv[[.]]

  # REPLACEMENT:
    sv[['a']] <- "first"
    sv[[ perl('^[c|d]$') ]] <- "third"

  # RECURSIVE LISTS:
  l <- list( a=1, b=2, c=3 )
  sl <- searchable(li)
  sl[["b"]]
  sl[[ ignore.case("B") ]]
  sl[[ "B"  \%>\% ignore.case ]]
  "b" \%>\% sl[[.]]
  "B" \%>\% ignore.case \%>\% sl[[ . ]]

  se <- searchable(e)
  se[["b"]]
  se[[ ignore.case("B") ]]
  se[[ "B"  \%>\% ignore.case ]]
  "b" \%>\% se[[.]]
  "B" \%>\% ignore.case \%>\% se[[ . ]]
}
\seealso{
\code{\link[stringr]{ignore.case}} \cr
  \code{\link[stringr]{perl}}        \cr
  \code{\link{reverse.lookup}}       \cr
  \code{\link[base]{Extract}}        \cr
}

